name: NPM Publish

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  validate:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.VERSION }}
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Validate tag format
        run: |
          if [[ ! "${{ github.ref_name }}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+(-.*)?$ ]]; then
            echo "❌ Invalid tag format. Expected: v1.0.0 or v1.0.0-beta.1"
            exit 1
          fi
          echo "✅ Tag format is valid"

      - name: Extract version from tag
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "📦 Version to publish: $VERSION"

      - name: Install dependencies
        run: npm ci

      - name: Lint and type check
        run: |
          npm run check --if-present
          echo "✅ Type checking passed"

      - name: Build project
        run: |
          npm run build
          echo "✅ Build completed"

      - name: Verify build artifacts
        run: |
          if [ ! -d "dist" ]; then
            echo "❌ Build artifacts not found"
            exit 1
          fi
          echo "✅ Build artifacts verified"

  publish:
    needs: validate
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Update package.json version
        run: |
          npm version ${{ needs.validate.outputs.version }} --no-git-tag-version
          echo "📝 Updated package.json to version ${{ needs.validate.outputs.version }}"

      - name: Dry run publish
        run: |
          npm publish --dry-run --access public
          echo "✅ Dry run successful"

      - name: Publish to NPM
        run: |
          npm publish --access public
          echo "🚀 Successfully published to NPM"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Verify NPM publish
        run: |
          sleep 30  # Wait for NPM to propagate
          if npm view @docx-mcp/docx-mcp@${{ needs.validate.outputs.version }} version; then
            echo "✅ Package verified on NPM"
          else
            echo "❌ Package verification failed"
            exit 1
          fi

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: |
            ## 🎉 Version ${{ needs.validate.outputs.version }}
            
            ### 📦 NPM Package
            - **Package**: `@docx-mcp/docx-mcp@${{ needs.validate.outputs.version }}`
            - **NPM Link**: https://www.npmjs.com/package/@docx-mcp/docx-mcp/v/${{ needs.validate.outputs.version }}
            
            ### 📥 Installation
            ```bash
            # Install globally
            npm install -g @docx-mcp/docx-mcp@${{ needs.validate.outputs.version }}
            
            # Or install in project
            npm install @docx-mcp/docx-mcp@${{ needs.validate.outputs.version }}
            ```
            
            ### 🔄 Upgrade
            ```bash
            npm update -g @docx-mcp/docx-mcp
            ```
            
            ### 📋 What's New
            See the [commit history](https://github.com/${{ github.repository }}/commits/${{ github.ref_name }}) for detailed changes.
            
            ---
            
            **Full Changelog**: https://github.com/${{ github.repository }}/compare/v0.1.0...${{ github.ref_name }}
          draft: false
          prerelease: ${{ contains(github.ref_name, '-') }}
